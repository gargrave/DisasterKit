!function(){"use strict";angular.module("dk",["ngMessages","ui.router"]).config(["$interpolateProvider","$httpProvider","$stateProvider","$urlRouterProvider",function($interpolateProvider,$httpProvider,$stateProvider,$urlRouterProvider){$interpolateProvider.startSymbol("{A"),$interpolateProvider.endSymbol("A}"),$stateProvider.state("dk",{url:"","abstract":!0}).state("dk.home",{url:"/",views:{"home@":{controller:"HomeController as homeCtrl",templateUrl:"/static/partials/home.html"}}}).state("dk.item_list",{url:"/items/:forceUpdate",views:{"item_list@":{controller:"ItemListCtrl as itemListCtrl",templateUrl:"/static/partials/item-list.html"}}}).state("dk.item_detail",{url:"/items/detail/:id",views:{"item_detail@":{controller:"ItemDetailController as itemDetailCtrl",templateUrl:"/static/partials/item-detail.html"}}}).state("dk.item_create",{url:"/items/add/",views:{"item_create@":{controller:"ItemCreateController as itemCreateCtrl",templateUrl:"/static/partials/item-create.html"}}}).state("dk.item_update",{url:"/items/update/:id",views:{"item_update@":{controller:"ItemUpdateController as itemUpdateCtrl",templateUrl:"/static/partials/item-update.html"}}}),$urlRouterProvider.otherwise("/"),$httpProvider.defaults.xsrfCookieName="csrftoken",$httpProvider.defaults.xsrfHeaderName="X-CSRFToken",$httpProvider.defaults.headers.post["Content-Type"]="application/x-www-form-urlencoded;charset=utf-8";var param=function(obj){var name,value,fullSubName,subName,subValue,innerObj,i,query="";for(name in obj)if(value=obj[name],value instanceof Array)for(i=0;i<value.length;++i)subValue=value[i],fullSubName=name+"["+i+"]",innerObj={},innerObj[fullSubName]=subValue,query+=param(innerObj)+"&";else if(value instanceof Object)for(subName in value)subValue=value[subName],fullSubName=name+"["+subName+"]",innerObj={},innerObj[fullSubName]=subValue,query+=param(innerObj)+"&";else void 0!==value&&null!==value&&(query+=encodeURIComponent(name)+"="+encodeURIComponent(value)+"&");return query.length?query.substr(0,query.length-1):query};$httpProvider.defaults.transformRequest=[function(data){return angular.isObject(data)&&"[object File]"!==String(data)?param(data):data}]}])}(),function(){"use strict";angular.module("dk").controller("HomeController",[function(){}])}(),function(){"use strict";angular.module("dk").controller("ItemCreateController",["$scope","$http","$state","categoryListSvc",function($scope,$http,$state,categoryListSvc){var vm=this;vm.loading=!0,vm.item={},vm.cats=[],vm.subcats=[],vm.valid={date:!0},vm.load=function(){categoryListSvc.getCategoryList().then(function(res){vm.cats=res.cats,vm.subcats=res.subcats,vm.item.cat=vm.cats[0],vm.item.subcat=vm.subcats[0],vm.loading=!1})},vm.saveNewItem=function(){$scope.submitted=!1,$scope.createForm.$valid?(vm.item.notes=vm.item.notes||"",$http.post("items/api/create_item/",vm.item).then(function(res){$state.go("dk.item_list",{forceUpdate:!0})},function(res){alert("There was an error when attempting to create this item.\nStatus code: "+res.status),$state.go("dk.item_list")})):$scope.createForm.submitted=!0},function(){vm.load()}()}])}(),function(){"use strict";angular.module("dk").controller("ItemDetailController",["$http","$state","$stateParams","itemListSvc",function($http,$state,$stateParams,itemListSvc){var vm=this;vm.loading=!0,vm.item={},vm.updateDetailedItem=function(){itemListSvc.getItemById($stateParams.id).then(function(res){vm.item=res,vm.loading=!1})},vm.deleteItem=function(){confirm("Delete this item?")&&$http["delete"]("items/api/delete_item/"+vm.item.id).then(function(res){$state.go("dk.item_list",{forceUpdate:!0})},function(res){alert("There was an error when attempting to delete this item.\nStatus code: "+res.status),$state.go("dk.item_list")})},function(){vm.updateDetailedItem()}()}])}(),function(){"use strict";angular.module("dk").controller("ItemUpdateController",["$scope","$http","$state","$stateParams","itemListSvc","categoryListSvc",function($scope,$http,$state,$stateParams,itemListSvc,categoryListSvc){function updateLoadingStatus(){vm.item.id&&vm.cats.length>0&&vm.subcats.length>0&&(vm.loading=!1)}var vm=this;vm.loading=!0,vm.item={},vm.cats=[],vm.subcats=[],vm.valid={date:!0},vm.load=function(){itemListSvc.getItemById($stateParams.id).then(function(res){vm.item=res,updateLoadingStatus()}),categoryListSvc.getCategoryList().then(function(res){vm.cats=res.cats,vm.subcats=res.subcats,updateLoadingStatus()})},vm.commitUpdates=function(){$scope.submitted=!1,$scope.updateForm.$valid?$http.post("items/api/update_item/",vm.item).then(function(res){$state.go("dk.item_list",{forceUpdate:!0})},function(res){alert("There was an error when attempting to update this item.\nStatus code: "+res.status),$state.go("dk.item_list")}):$scope.updateForm.submitted=!0},function(){vm.load()}()}])}(),function(){"use strict";angular.module("dk").controller("MainController",[function(){var vm=this;vm.asdf="fart",vm["class"]={SIXCOLS:"six columns offset-by-three"}}])}(),function(){"use strict";angular.module("dk").service("categoryListSvc",["$http","$q","$state",function($http,$q,$state){var vm=this,combined={};vm.getCategoryList=function(){var deferred=$q.defer();return combined.cats&&combined.subcats?deferred.resolve(combined):$http.get("items/api/get_categories").then(function(res){combined={cats:res.data.cats,subcats:res.data.subcats},deferred.resolve(combined)},function(res){alert("There was an error getting the categories list from the server.\nStatus code: "+res.status),$state.go("dk.home")}),deferred.promise}}])}(),function(){"use strict";angular.module("dk").service("itemListSvc",["$http","$q","$state",function($http,$q,$state){var vm=this,items=[];vm.getItemList=function(forceUpdate){var deferred=$q.defer(),force=forceUpdate||!1;return items.length>0&&!force?deferred.resolve(items):$http.get("items/api/get_all_items").then(function(res){items=[];var jsonItems=res.data.items;for(var i in jsonItems)jsonItems.hasOwnProperty(i)&&items.push(jsonItems[i]);deferred.resolve(items)},function(res){alert("There was an error getting the item list from the server.\nStatus code: "+res.status),$state.go("dk.home")}),deferred.promise},vm.getItemById=function(targetID){var deferred=$q.defer();return $http.get("items/api/get_item_by_id/"+targetID).then(function(res){deferred.resolve(res.data)},function(res){"404"!=res.status&&alert("There was an error getting the item's details from the server.\nStatus code: "+res.status),$state.go("dk.item_list")}),deferred.promise}}])}();